{"version":3,"sources":["Minesweeper/consts.js","Minesweeper/getGrid.js","Minesweeper/minesweeperSlice.js","store.js","Minesweeper/Grid/styled.js","Minesweeper/Grid/Field/styled.js","Minesweeper/Grid/Field/index.js","Minesweeper/Grid/index.js","Minesweeper/TopBar/styled.js","Minesweeper/TopBar/Timer/useTimer.js","Minesweeper/TopBar/Timer/index.js","Minesweeper/TopBar/index.js","Minesweeper/styled.js","Minesweeper/LowBar/styled.js","Minesweeper/LowBar/index.js","Minesweeper/index.js","GlobalStyle.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["difficultyLevels","name","minesQuantity","fields","columns","rows","getGrid","difficulty","grid","difficultyLevelsIndex","findIndex","difficultyLevel","fieldsQuantity","columnsQuantity","i","column","row","push","id","revealed","mine","Math","random","markedAsMine","surroundingMines","coordinates","initiateGrid","minesIndexs","j","max","maxIndex","k","length","map","field","includes","setMinesOnGrid","forEach","gridField","currentSurroundingMines","currentColumn","currentRow","determiningFields","determiningField","targetIndex","minesweeperSlice","createSlice","initialState","flaggedFieldsQuantity","gameStatus","reducers","leftClick","state","payload","index","fieldsRevealed","newGameButtonClick","setNewDifficultyLevel","console","log","setMarkedAsMine","revealSurroundingFields","dependentField","actions","checkIfGameOver","setRevealed","selectGrid","minesweeper","selectDifficultyLevel","selectGameStatus","selectFlaggedFieldsQuantity","store","configureStore","reducer","minesweeperReducer","GridWrapper","styled","div","theme","colors","darkBorder","lightBorder","css","StyledField","button","mainLight","semiDarkBorder","one","two","three","four","five","six","seven","eight","lost","won","Field","dispatch","useDispatch","useSelector","clickHandler","event","type","preventDefault","useEffect","onClick","undefined","onContextMenu","Grid","TopBarWrapper","mainDark","NewGameButton","Wrapper","topBarBackground","useTimer","useState","actualTime","setActualTime","intervalId","setInterval","previousActualTime","clearInterval","toFixed","Timer","TopBar","minesLeft","LowBarWrapper","DifficultyLevelButton","buttonDifficultyLevel","LowBar","Minesweeper","GlobalStyle","createGlobalStyle","breakPoints","mobileMax","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.575bf41c.chunk.js","sourcesContent":["export const difficultyLevels = [\r\n    {\r\n        name: \"beginner\",\r\n        minesQuantity: 10,\r\n        fields: 64,\r\n        columns: 8,\r\n        rows: 8,\r\n    },\r\n    {\r\n        name: \"intermediate\",\r\n        minesQuantity: 40,\r\n        fields: 256,\r\n        columns: 16,\r\n        rows: 16,\r\n    },\r\n    {\r\n        name: \"expert\",\r\n        minesQuantity: 99,\r\n        fields: 480,\r\n        columns: 30,\r\n        rows: 16,\r\n    },\r\n];","import { difficultyLevels } from \"./consts\";\r\n\r\nconst getGrid = (difficulty) => {\r\n\r\n    const grid = [];\r\n\r\n    const difficultyLevelsIndex = difficultyLevels.findIndex(difficultyLevel => difficultyLevel.name === difficulty);\r\n\r\n    const fieldsQuantity = difficultyLevels[difficultyLevelsIndex].fields;\r\n    const minesQuantity = difficultyLevels[difficultyLevelsIndex].minesQuantity;\r\n    const columnsQuantity = difficultyLevels[difficultyLevelsIndex].columns;\r\n\r\n    const initiateGrid = () => {\r\n        for (var i = 0; i < fieldsQuantity; i++) {\r\n            var column = (i === 0 ? 1 : (column === columnsQuantity ? 1 : column = column + 1));\r\n            var row = (i === 0 ? 1 : (i % columnsQuantity === 0 ? row = row + 1 : row));\r\n\r\n            grid.push(\r\n                {\r\n                    id: i,\r\n                    revealed: false,\r\n                    mine: Math.random(),\r\n                    markedAsMine: false,\r\n                    surroundingMines: \"auto\",\r\n                    coordinates:\r\n                    {\r\n                        column,\r\n                        row,\r\n                    }\r\n                }\r\n            );\r\n        };\r\n    };\r\n\r\n    const setMinesOnGrid = () => {\r\n        var minesIndexs = [];\r\n\r\n        for (var j = 0; j < minesQuantity; j++) {\r\n            var max = grid[0].mine;\r\n            var maxIndex = 0;\r\n            for (var k = 1; k < grid.length; k++) {\r\n                if (grid[k].mine > max && grid[k].mine !== true) {\r\n                    maxIndex = k;\r\n                    max = grid[k].mine;\r\n                };\r\n            };\r\n            grid[maxIndex].mine = 0;\r\n            minesIndexs.push(maxIndex);\r\n        };\r\n        grid.map((field) => minesIndexs.includes(field.id) ? field.mine = true : field.mine = false);\r\n    };\r\n\r\n    const setSurroundingMinesNumber = () => {\r\n        grid.forEach(gridField => {\r\n\r\n            var currentSurroundingMines = 0;\r\n            const currentColumn = gridField.coordinates.column;\r\n            const currentRow = gridField.coordinates.row;\r\n            const incrementCurrentSurroundingMines = () => currentSurroundingMines = currentSurroundingMines + 1;\r\n\r\n            const determiningFields = [\r\n                gridField => gridField.coordinates.column === currentColumn - 1 && gridField.coordinates.row === currentRow - 1,\r\n                gridField => gridField.coordinates.column === currentColumn && gridField.coordinates.row === currentRow - 1,\r\n                gridField => gridField.coordinates.column === currentColumn + 1 && gridField.coordinates.row === currentRow - 1,\r\n                gridField => gridField.coordinates.column === currentColumn - 1 && gridField.coordinates.row === currentRow,\r\n                gridField => gridField.coordinates.column === currentColumn + 1 && gridField.coordinates.row === currentRow,\r\n                gridField => gridField.coordinates.column === currentColumn - 1 && gridField.coordinates.row === currentRow + 1,\r\n                gridField => gridField.coordinates.column === currentColumn && gridField.coordinates.row === currentRow + 1,\r\n                gridField => gridField.coordinates.column === currentColumn + 1 && gridField.coordinates.row === currentRow + 1,\r\n            ];\r\n\r\n            determiningFields.forEach(determiningField => {\r\n                const targetIndex = grid.findIndex(determiningField);\r\n                targetIndex !== -1 && grid[targetIndex].mine === true && incrementCurrentSurroundingMines();\r\n            });\r\n            gridField.surroundingMines = currentSurroundingMines;\r\n        });\r\n    };\r\n\r\n    initiateGrid();\r\n    setMinesOnGrid();\r\n    setSurroundingMinesNumber();\r\n\r\n    return (grid);\r\n};\r\n\r\nexport default getGrid;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { difficultyLevels } from \"./consts\";\r\nimport getGrid from \"./getGrid\";\r\n\r\nconst minesweeperSlice = createSlice(\r\n    {\r\n        name: 'minesweeper',\r\n        initialState: {\r\n            difficultyLevel: \"beginner\",\r\n            grid: getGrid(\"beginner\"),\r\n            flaggedFieldsQuantity: 0,\r\n            gameStatus: \"initial\",\r\n        },\r\n\r\n        reducers: {\r\n            leftClick: (state, { payload: id }) => {\r\n                state.gameStatus === \"initial\" && (state.gameStatus = \"gameIsOn\");\r\n                const index = state.grid.findIndex(field => field.id === id);\r\n                state.grid[index].revealed = true;\r\n                state.grid[index].mine === true && (state.gameStatus = \"lost\");\r\n\r\n                const difficultyLevelsIndex = difficultyLevels.findIndex(difficultyLevel => difficultyLevel.name === state.difficultyLevel)\r\n                const minesQuantity = difficultyLevels[difficultyLevelsIndex].minesQuantity;\r\n\r\n                let fieldsRevealed = 0;\r\n                state.grid.forEach(field => {\r\n                    field.revealed === true && (fieldsRevealed = fieldsRevealed + 1);\r\n                });\r\n                fieldsRevealed === state.grid.length - minesQuantity && state.gameStatus !== \"lost\" && (state.gameStatus = \"won\");\r\n\r\n                if (state.gameStatus === \"lost\" || state.gameStatus === \"won\") {\r\n                    state.grid.forEach(field => {\r\n                        field.mine === true && (field.revealed = true);\r\n                    });\r\n                };\r\n            },\r\n            newGameButtonClick: (state) => {\r\n                state.gameStatus = \"initial\";\r\n                state.grid = getGrid(state.difficultyLevel);\r\n                state.flaggedFieldsQuantity = 0;\r\n            },\r\n            setNewDifficultyLevel: (state, { payload }) => {\r\n                state.gameStatus = \"initial\";\r\n                console.log(payload);\r\n                state.difficultyLevel = payload;\r\n                state.grid = getGrid(state.difficultyLevel);\r\n                state.flaggedFieldsQuantity = 0;\r\n            },\r\n            setMarkedAsMine: (state, { payload: id }) => {\r\n                const index = state.grid.findIndex(field => field.id === id);\r\n                // eslint-disable-next-line\r\n                switch (state.grid[index].markedAsMine) {\r\n                    case false:\r\n                        state.grid[index].markedAsMine = true;\r\n                        state.flaggedFieldsQuantity = state.flaggedFieldsQuantity + 1;\r\n                        break;\r\n                    case true:\r\n                        state.grid[index].markedAsMine = false;\r\n                        state.flaggedFieldsQuantity = state.flaggedFieldsQuantity - 1;\r\n                };\r\n            },\r\n            revealSurroundingFields: (state, { payload }) => {\r\n                const dependentFields = [\r\n                    field => field.coordinates.column === payload.column - 1 && field.coordinates.row === payload.row - 1,\r\n                    field => field.coordinates.column === payload.column && field.coordinates.row === payload.row - 1,\r\n                    field => field.coordinates.column === payload.column + 1 && field.coordinates.row === payload.row - 1,\r\n                    field => field.coordinates.column === payload.column - 1 && field.coordinates.row === payload.row,\r\n                    field => field.coordinates.column === payload.column + 1 && field.coordinates.row === payload.row,\r\n                    field => field.coordinates.column === payload.column - 1 && field.coordinates.row === payload.row + 1,\r\n                    field => field.coordinates.column === payload.column && field.coordinates.row === payload.row + 1,\r\n                    field => field.coordinates.column === payload.column + 1 && field.coordinates.row === payload.row + 1,\r\n                ];\r\n                dependentFields.forEach(dependentField => {\r\n                    const targetIndex = state.grid.findIndex(dependentField);\r\n                    state.grid[targetIndex] && (state.grid[targetIndex].revealed = true);\r\n                });\r\n            },\r\n        },\r\n    });\r\n\r\nexport const {\r\n    checkIfGameOver,\r\n    setRevealed,\r\n    newGameButtonClick,\r\n    setNewDifficultyLevel,\r\n    setMarkedAsMine,\r\n    revealSurroundingFields,\r\n    leftClick\r\n} = minesweeperSlice.actions;\r\nexport const selectGrid = state => state.minesweeper.grid;\r\nexport const selectDifficultyLevel = state => state.minesweeper.difficultyLevel;\r\nexport const selectGameStatus = state => state.minesweeper.gameStatus;\r\nexport const selectFlaggedFieldsQuantity = state => state.minesweeper.flaggedFieldsQuantity;\r\nexport default minesweeperSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport minesweeperReducer from \"./Minesweeper/minesweeperSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        minesweeper: minesweeperReducer,\r\n    },\r\n});\r\n\r\nexport default store;","import styled, { css } from 'styled-components';\r\n\r\nexport const GridWrapper = styled.div`\r\n    display: grid;\r\n\tgrid-template-columns: repeat(8, 1fr);\r\n    padding: 1px;\r\n    border-radius: 5px;\r\n    border-top: 2px solid ${({ theme }) => theme.colors.darkBorder};\r\n    border-right: 2px solid ${({ theme }) => theme.colors.lightBorder};\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.lightBorder};\r\n    border-left: 2px solid ${({ theme }) => theme.colors.darkBorder};\r\n\r\n    ${({ difficultyLevel }) => difficultyLevel === \"intermediate\" && css`\r\n        grid-template-columns: repeat(16, 1fr);\r\n    `};\r\n    ${({ difficultyLevel }) => difficultyLevel === \"expert\" && css`\r\n        grid-template-columns: repeat(30, 1fr);\r\n    `};\r\n`;","import styled, { css } from 'styled-components';\r\n\r\nexport const StyledField = styled.button`\r\n\twidth: 40px;\r\n    height: 40px;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    background-color: ${({ theme }) => theme.colors.mainLight};\r\n    border-top: 2px solid ${({ theme }) => theme.colors.lightBorder};\r\n    border-right: 2px solid ${({ theme }) => theme.colors.darkBorder};\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.darkBorder};\r\n    border-left: 2px solid ${({ theme }) => theme.colors.lightBorder};\r\n\r\n    ${({ difficultyLevel }) => difficultyLevel === \"intermediate\" && css`\r\n        width: 32px;\r\n        height: 32px;;\r\n    `};\r\n    ${({ difficultyLevel }) => difficultyLevel === \"expert\" && css`\r\n        width: 28px;\r\n        height: 28px;;\r\n    `};\r\n\r\n    ${({ revealed }) => revealed && css`\r\n        filter: brightness(108%);\r\n        border-top: 1px solid ${({ theme }) => theme.colors.semiDarkBorder};\r\n        border-left: 1px solid ${({ theme }) => theme.colors.semiDarkBorder};\r\n        border-right: initial;\r\n        border-bottom: initial;\r\n    `}\r\n\r\n    ${({ surroundingMines }) => surroundingMines === 1 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.one};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 2 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.two};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 3 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.three};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 4 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.four};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 5 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.five};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 6 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.six};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 7 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.seven};\r\n    `}\r\n    ${({ surroundingMines }) => surroundingMines === 8 && css`\r\n        color: ${({ theme }) => theme.colors.surroundingMines.eight};\r\n    `}\r\n\r\n    ${({ mine, lost }) => mine && lost && css`\r\n        color: black;\r\n        background-color: red;\r\n    `}\r\n    ${({ mine, won }) => mine && won && css`\r\n        color: black;\r\n        background-color: green;\r\n    `}\r\n`;","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    setMarkedAsMine,\r\n    revealSurroundingFields,\r\n    leftClick,\r\n    selectGameStatus,\r\n    selectDifficultyLevel\r\n} from \"./../../minesweeperSlice\";\r\nimport { StyledField } from \"./styled\";\r\n\r\nconst Field = ({ id, mine, coordinates, revealed, markedAsMine, surroundingMines }) => {\r\n    const dispatch = useDispatch();\r\n    const gameStatus = useSelector(selectGameStatus);\r\n    const difficultyLevel = useSelector(selectDifficultyLevel);\r\n\r\n    const clickHandler = (event) => {\r\n        if (event.type === 'click') {\r\n            event.preventDefault();\r\n            dispatch(leftClick(id));\r\n            surroundingMines === 0 && dispatch(revealSurroundingFields(coordinates));\r\n        } else if (event.type === 'contextmenu') {\r\n            event.preventDefault();\r\n            revealed === false && dispatch(setMarkedAsMine(id));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        revealed === true && surroundingMines === 0 && dispatch(revealSurroundingFields(coordinates));\r\n        // eslint-disable-next-line\r\n    }, [revealed]);\r\n\r\n    return (\r\n        <StyledField\r\n            mine={mine}\r\n            revealed={revealed}\r\n            lost={gameStatus === \"lost\"}\r\n            won={gameStatus === \"won\"}\r\n            difficultyLevel={difficultyLevel}\r\n            surroundingMines={surroundingMines}\r\n            onClick={gameStatus !== \"lost\" && gameStatus !== \"won\" ? clickHandler : undefined}\r\n            onContextMenu={gameStatus !== \"lost\" && gameStatus !== \"won\" ? clickHandler : undefined}\r\n        >\r\n            {revealed && mine === false && (surroundingMines === 0 ? \"\" : surroundingMines)}\r\n            {revealed && mine && \"💣\"}\r\n            {markedAsMine && gameStatus === \"gameIsOn\" && \"🚩\"}\r\n        </StyledField>\r\n    );\r\n};\r\n\r\nexport default Field;","import { useSelector } from \"react-redux\"\r\nimport { GridWrapper } from \"./styled\";\r\nimport Field from \"./Field\";\r\nimport { selectDifficultyLevel, selectGrid } from \"./../minesweeperSlice\";\r\n\r\nconst Grid = () => {\r\n    const grid = useSelector(selectGrid);\r\n    const difficultyLevel = useSelector(selectDifficultyLevel);\r\n\r\n    return (\r\n        <GridWrapper difficultyLevel={difficultyLevel}>\r\n            {grid.map(gridField =>\r\n            (<Field\r\n                key={gridField.id}\r\n                id={gridField.id}\r\n                mine={gridField.mine}\r\n                coordinates={gridField.coordinates}\r\n                surroundingMines={gridField.surroundingMines}\r\n                revealed={gridField.revealed}\r\n                markedAsMine={gridField.markedAsMine}\r\n            />))}\r\n        </GridWrapper>\r\n    );\r\n};\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\nexport const TopBarWrapper = styled.div`\r\n    width: 100%;\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    margin-bottom: 12px;\r\n    border-radius: 10px 10px 0px 0px;\r\n    background-color: ${({ theme }) => theme.colors.mainDark};\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nexport const NewGameButton = styled.button`\r\n    border: none;\r\n    background-color: inherit;\r\n    padding: 0px;\r\n    font-size: 40px;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 10px;\r\n    min-width: 100px;\r\n    text-align: center;\r\n    border-radius: 10px 10px 0px 0px;\r\n    background-color: ${({ theme }) => theme.colors.topBarBackground};\r\n`;","import { useEffect, useState } from \"react\";\r\n\r\nconst useTimer = (gameStatus) => {\r\n\r\n    const [actualTime, setActualTime] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            gameStatus === \"initial\" && setActualTime(0);\r\n            gameStatus === \"gameIsOn\" && setActualTime(previousActualTime => previousActualTime + 0.1);\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, [gameStatus]);\r\n\r\n    return actualTime.toFixed(1);\r\n};\r\n\r\nexport default useTimer;","import { useSelector } from \"react-redux\";\r\nimport { selectGameStatus } from \"./../../minesweeperSlice\";\r\nimport useTimer from \"./useTimer\";\r\n\r\nconst Timer = () => {\r\n    const gameStatus = useSelector(selectGameStatus);\r\n\r\n    return (\r\n        <>\r\n            <span>⏲️: {useTimer(gameStatus)}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Timer;","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { newGameButtonClick, selectDifficultyLevel, selectFlaggedFieldsQuantity, selectGameStatus } from \"./../minesweeperSlice\";\r\nimport { difficultyLevels } from \"./../consts\";\r\nimport { NewGameButton, TopBarWrapper, Wrapper } from \"./styled\";\r\nimport Timer from \"./Timer\";\r\n\r\nconst TopBar = () => {\r\n    const difficulty = useSelector(selectDifficultyLevel);\r\n    const gameStatus = useSelector(selectGameStatus);\r\n    const flaggedFieldsQuantity = useSelector(selectFlaggedFieldsQuantity);\r\n    const dispatch = useDispatch();\r\n\r\n    const difficultyLevelsIndex = difficultyLevels.findIndex(difficultyLevel => difficultyLevel.name === difficulty);\r\n    const minesQuantity = difficultyLevels[difficultyLevelsIndex].minesQuantity;\r\n    const minesLeft = minesQuantity - flaggedFieldsQuantity;\r\n\r\n    return (\r\n        <TopBarWrapper>\r\n            <Wrapper>\r\n                🚩: {minesLeft}\r\n            </Wrapper>\r\n            <NewGameButton onClick={() => dispatch(newGameButtonClick())}>\r\n                {gameStatus === \"won\" ? \"😎\" : gameStatus === \"lost\" ? \"😖\" : \"😀\"}\r\n            </NewGameButton>\r\n            <Wrapper>\r\n                <Timer />\r\n            </Wrapper>\r\n        </TopBarWrapper>\r\n    );\r\n};\r\n\r\nexport default TopBar;","import styled, { css } from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 100px auto;\r\n    width: 364px;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    background-color: ${({ theme }) => theme.colors.mainLight};\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    ${({ difficultyLevel }) => difficultyLevel === \"intermediate\" && css`\r\n        width: 560px;\r\n    `};\r\n    ${({ difficultyLevel }) => difficultyLevel === \"expert\" && css`\r\n        width: 884px;\r\n    `};\r\n`;","import styled, { css } from 'styled-components';\r\n\r\nexport const LowBarWrapper = styled.div`\r\n    width: 100%;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    margin-top: 12px;\r\n    border-radius: 0px 0px 10px 10px;\r\n    background-color: ${({ theme }) => theme.colors.mainDark};\r\n    display: flex;\r\n    justify-content: space-between;\r\n`;\r\n\r\nexport const DifficultyLevelButton = styled.button`\r\n    border: none;\r\n    color: white;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.colors.topBarBackground};\r\n    border-radius: 5px;\r\n    padding: 6px;\r\n    font-size: 16px;\r\n\r\n    ${({ buttonDifficultyLevel, difficultyLevel }) => buttonDifficultyLevel === difficultyLevel && css`\r\n        font-weight: bold;\r\n    `};\r\n`;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { LowBarWrapper, DifficultyLevelButton } from \"./styled\";\r\nimport { selectDifficultyLevel, setNewDifficultyLevel } from \"./../minesweeperSlice\";\r\n\r\nconst LowBar = () => {\r\n    const difficultyLevel = useSelector(selectDifficultyLevel);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <LowBarWrapper>\r\n            <DifficultyLevelButton\r\n                buttonDifficultyLevel={\"beginner\"}\r\n                difficultyLevel={difficultyLevel}\r\n                onClick={() => dispatch(setNewDifficultyLevel(\"beginner\"))}\r\n            >\r\n                Beginner\r\n            </DifficultyLevelButton>\r\n            <DifficultyLevelButton\r\n                buttonDifficultyLevel={\"intermediate\"}\r\n                difficultyLevel={difficultyLevel}\r\n                onClick={() => dispatch(setNewDifficultyLevel(\"intermediate\"))}\r\n            >\r\n                Intermediate\r\n            </DifficultyLevelButton>\r\n            <DifficultyLevelButton\r\n                buttonDifficultyLevel={\"expert\"}\r\n                difficultyLevel={difficultyLevel}\r\n                onClick={() => dispatch(setNewDifficultyLevel(\"expert\"))}\r\n            >\r\n                Expert\r\n            </DifficultyLevelButton>\r\n        </LowBarWrapper >\r\n    );\r\n};\r\n\r\nexport default LowBar;","import { useSelector } from \"react-redux\"\r\nimport { selectDifficultyLevel } from \"./minesweeperSlice\";\r\nimport Grid from \"./Grid\"\r\nimport TopBar from \"./TopBar\";\r\nimport { Wrapper } from \"./styled\";\r\nimport LowBar from \"./LowBar\";\r\n\r\nconst Minesweeper = () => {\r\n\r\n    const difficultyLevel = useSelector(selectDifficultyLevel);\r\n\r\n    return (\r\n        <Wrapper difficultyLevel={difficultyLevel}>\r\n            <TopBar />\r\n            <Grid />\r\n            <LowBar />\r\n        </Wrapper >\r\n    );\r\n};\r\n\r\nexport default Minesweeper;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n\r\n    html {\r\n        box-sizing: border-box;\r\n    }\r\n    \r\n    *, ::after, ::before {\r\n        box-sizing: inherit;\r\n    }\r\n\r\n    body {\r\n        margin: 0;\r\n        background-color: ${({ theme }) => theme.colors.mainDark};\r\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n        sans-serif;\r\n        word-break: break-word;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n`;","export const theme = {\r\n    colors: {\r\n        mainDark: \"#1e2832\",\r\n        mainLight: \"#cccccc\",\r\n        topBarBackground: \"#2C3D4E\",\r\n        darkBorder: \"#555555\",\r\n        semiDarkBorder: \"#888888\",\r\n        lightBorder: \"#eeeeee\",\r\n        surroundingMines: {\r\n            one: \"blue\",\r\n            two: \"green\",\r\n            three: \"red\",\r\n            four: \"purple\",\r\n            five: \"maroon\",\r\n            six: \"turquoise\",\r\n            seven: \"black\",\r\n            eight: \"grey\",\r\n        },\r\n    },\r\n\r\n    breakPoints: {\r\n        mobileMax: \"767\",\r\n    },\r\n};","import { ThemeProvider } from \"styled-components\";\nimport Minesweeper from \"./Minesweeper\"\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport { theme } from \"./theme\"\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Minesweeper />\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}